name: Build JAR e Nativo Linux
on: push
jobs:
  build-create-release:
    name: Create Release
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set release name
        run: echo "::set-output name=TAG_NAME::v$(date '+%d-%m-%Y--%H-%M-%S')"
        id: release-name-generator

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.release-name-generator.outputs.TAG_NAME }}
          release_name: Release ${{ steps.release-name-generator.outputs.TAG_NAME }}
          body: |
            Changes in this Release
            - ${{ github.sha }}
          draft: false
          prerelease: false
      
      - name: 'Write Upload URL To File'
        run: |
          echo "${{steps.create_release.outputs.upload_url}}" > upload_url.txt

      - name: 'Publish Upload URL'
        uses: actions/upload-artifact@v2
        with:
          name: 'upload_url.txt'
          path: 'upload_url.txt'

  build-linux-image:
    needs: [build-create-release]
    name: 'Build Non-Windows Image'
    strategy:
      matrix:
        os: ['ubuntu-18.04']
        include:
          - os: 'ubuntu-18.04'
            label: 'linux'
    runs-on: ${{matrix.os}}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Java 11'
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: 'Get Version Number'
        run: |
          ./mvnw --version

      - name: 'Packaging uber-jar'
        run: |
          ./mvnw -B clean package -Dquarkus.package.type=uber-jar
          ls -lah target

      - name: 'Upload uber-jar'
        uses: actions/upload-artifact@v2
        with:
          name: projeto-0.0.1-SNAPSHOT-runner-${{matrix.label}}.jar
          path: target/projeto-0.0.1-SNAPSHOT-runner.jar

      - name: 'Get Upload File - URL'
        uses: actions/download-artifact@v2
        with:
          name: 'upload_url.txt'

      - name: Get Upload URL
        id: get-upload-url
        run: echo "::set-output name=UPLOAD_URL::$(cat upload_url.txt)"

      - name: Upload Release Asset JAR
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get-upload-url.outputs.UPLOAD_URL }}
          asset_path: ./target/projeto-0.0.1-SNAPSHOT-runner.jar
          asset_name: projeto-0.0.1-SNAPSHOT-runner-${{matrix.label}}.jar
          asset_content_type: application/java-archive

      - name: 'Setup GraalVM Environment'
        uses: DeLaGuardo/setup-graalvm@3.0
        with:
          graalvm-version: '20.3.0.java11'

      - name: 'Install Native Image Plugin'
        run: |
          gu install native-image

      - name: 'Build Native Linux'
        run: |
          ./mvnw -B clean package -Pnative -Dquarkus.native.container-build=false
          ls -lah target

      - name: 'Upload native artifact'
        uses: actions/upload-artifact@v2
        with:
          name: projeto-0.0.1-SNAPSHOT-runner-${{matrix.label}}
          path: target/projeto-0.0.1-SNAPSHOT-runner

      - name: Upload Release Asset Native ${{matrix.label}}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get-upload-url.outputs.UPLOAD_URL }}
          asset_path: ./target/projeto-0.0.1-SNAPSHOT-runner
          asset_name: projeto-0.0.1-SNAPSHOT-runner-${{matrix.label}}
          asset_content_type: application/octet-stream
